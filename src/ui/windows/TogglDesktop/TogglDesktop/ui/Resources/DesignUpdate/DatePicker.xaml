<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:converters="clr-namespace:TogglDesktop.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
        <ResourceDictionary Source="Calendar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:PopupAlignmentAwareConverter x:Key="PopupAlignmentAwareConverter"/>

    <Style TargetType="Button" x:Key="Toggl.DateIconButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                            Height="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                            Background="{TemplateBinding Background}">
                        <Path Fill="{TemplateBinding Foreground}" Data="M8 5v1h8V5h1v1h3v14H4V6h3V5h1zm11 5H5v9h14v-9zm-5 7v1h-1v-1h1zm-3 0v1h-1v-1h1zm-3 0v1H7v-1h1zm3-2v1h-1v-1h1zm-3 0v1H7v-1h1zm9 0v1h-1v-1h1zm-3 0v1h-1v-1h1zm-3-2v1h-1v-1h1zm-3 0v1H7v-1h1zm9 0v1h-1v-1h1zm-3 0v1h-1v-1h1zm-3-2v1h-1v-1h1zm6 0v1h-1v-1h1zm-3 0v1h-1v-1h1zM7 7H5v2h14V7h-2v1h-1V7H8v1H7V7z"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.Button.Primary.Background}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource Toggl.CardBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource Toggl.DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="EditViewDatePickerStyle">
        <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Background" Value="{DynamicResource Toggl.SelectionElements.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CalendarStyle" Value="{StaticResource Toggl.Calendar.WithShadow}" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource Toggl.TextBox.MouseOverBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="Padding" Value="5 3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="24" />
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="SelectedDateFormat" Value="Long" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Base"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <Button x:Name="PART_Button"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Style="{StaticResource Toggl.DateIconButton}"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center" />

                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               mah:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.Watermark), Mode=OneWay}"
                                               mah:TextBoxHelper.WatermarkAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkAlignment), Mode=OneWay}"
                                               mah:TextBoxHelper.WatermarkTrimming="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkTrimming), Mode=OneWay}"
                                               CaretBrush="{DynamicResource Toggl.PrimaryTextBrush}"
                                               Focusable="{TemplateBinding Focusable}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               SelectionBrush="{DynamicResource MahApps.Brushes.Highlight}">
                                <i:Interaction.Behaviors>
                                    <behaviours:DatePickerTextBoxBehavior />
                                </i:Interaction.Behaviors>
                            </DatePickerTextBox>

                            <ContentControl x:Name="PART_FloatingMessageContainer"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{behaviours:MathMultiplyConverter}">
                                        <Binding ElementName="PART_FloatingMessage"
                                                 Mode="OneWay"
                                                 Path="ActualHeight" />
                                        <Binding ElementName="PART_FloatingMessageContainer"
                                                 Mode="OneWay"
                                                 Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{behaviours:MathSubtractConverter}">
                                                    <Binding ElementName="PART_FloatingMessage"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                    <Binding ElementName="PART_FloatingMessageContainer"
                                                             Mode="OneWay"
                                                             Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Popup x:Name="PART_Popup"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_Root}"
                                   StaysOpen="False"
                                   HorizontalOffset="{Binding Converter={StaticResource PopupAlignmentAwareConverter}, ConverterParameter='-8'}">
                            </Popup>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource MahApps.Brushes.Controls.Disabled}"
                                BorderBrush="{DynamicResource MahApps.Brushes.Controls.Disabled}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="mah:ControlsHelper.IsReadOnly" Value="True">
                            <Setter TargetName="PART_Button" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Toggl.DisabledTextBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.LightGrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MahApps.Styles.DatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Background" Value="{DynamicResource Toggl.SelectionElements.Background}" />
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="EnterGotFocus">
                            <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".2"
                                             Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".2"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="ExitGotFocus">
                            <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>

                        <Storyboard x:Key="EnterHasText">
                            <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                             Storyboard.TargetProperty="Opacity"
                                             From=".2"
                                             To="0"
                                             Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             From=".2"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="ExitHasText">
                            <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_InnerGrid" Margin="2">

                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Stretch"
                                      Background="{x:Null}"
                                      BorderThickness="0"
                                      FocusVisualStyle="{x:Null}"
                                      IsTabStop="False" />
                        <ContentControl x:Name="PART_Watermark"
                                        Margin="4 0 0 0"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                        mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                        Focusable="False"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsHitTestVisible="False"
                                        Opacity="0.6"
                                        Visibility="Hidden">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Text="{TemplateBinding Content}"
                                               TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                               TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" />
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <TextBlock x:Name="PART_Message"
                                   Margin="4 0 0 0"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                   Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                   TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                   TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.Watermark)}" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Toggl.CardBackground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.Button.Titlebar.MouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatePickerSelectDateButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource DatePickerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.Button.Titlebar.MouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="TimelineDatePickerStyle" BasedOn="{StaticResource EditViewDatePickerStyle}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource Toggl.TextBox.Border}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{StaticResource DatePickerButtonStyle}"
                                    Command="{Binding SelectPreviousDay}">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentControl Content="{StaticResource Toggl.DatePickerLeft}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <ToggleButton Grid.Column="1" x:Name="PART_Button"
                                FontWeight="{TemplateBinding FontWeight}"
                                FontSize="{TemplateBinding FontSize}"
                                Style="{StaticResource DatePickerSelectDateButtonStyle}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <DatePickerTextBox x:Name = "PART_TextBox"
                                                           HorizontalContentAlignment = "{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment = "{TemplateBinding VerticalContentAlignment}"
                                                           mah:TextBoxHelper.Watermark = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.Watermark), Mode=OneWay}"
                                                           mah:TextBoxHelper.WatermarkAlignment = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkAlignment), Mode=OneWay}"
                                                           mah:TextBoxHelper.WatermarkTrimming = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkTrimming), Mode=OneWay}"
                                                           CaretBrush = "{DynamicResource Toggl.PrimaryTextBrush}"
                                                           IsEnabled="False"
                                                           FontSize = "{TemplateBinding FontSize}"
                                                           Foreground = "{DynamicResource Toggl.PrimaryTextBrush}"
                                                           SelectionBrush = "{DynamicResource MahApps.Brushes.Highlight}"
                                                           Text = "{Binding Path=SelectedDate, StringFormat='ddd, dd/MM/yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" >
                                                <i:Interaction.Behaviors >
                                                    <behaviours:DatePickerTextBoxBehavior />
                                                </i:Interaction.Behaviors >
                                            </DatePickerTextBox >
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup"
                               Grid.Column="1"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_Button}"
                               StaysOpen="False"
                               IsOpen="{Binding ElementName=PART_Button, Path=IsChecked}"
                               HorizontalOffset="{Binding Converter={StaticResource PopupAlignmentAwareConverter}, ConverterParameter='-8'}">
                            </Popup>
                            <Button Grid.Column="2" Style="{StaticResource DatePickerButtonStyle}"
                                    Command="{Binding SelectNextDay}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentControl Content="{StaticResource Toggl.DatePickerRight}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>